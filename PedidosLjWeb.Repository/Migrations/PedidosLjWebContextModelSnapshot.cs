// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PedidosLjWeb.Repository;

#nullable disable

namespace PedidosLjWeb.Repository.Migrations
{
    [DbContext(typeof(PedidosLjWebContext))]
    partial class PedidosLjWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemPedido", (string)null);
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Fantasia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Loja", (string)null);
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdLoja")
                        .HasColumnType("int");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<int>("LojaId1")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ClienteId1");

                    b.HasIndex("LojaId");

                    b.HasIndex("LojaId1");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodBarras")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<string>("TipoProduto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.ItemPedido", b =>
                {
                    b.HasOne("PedidosLjWeb.Domain.Pedidos.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId");

                    b.HasOne("PedidosLjWeb.Domain.Pedidos.Produto", null)
                        .WithMany("Itens")
                        .HasForeignKey("ProdutoId");

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "Desconto", b1 =>
                        {
                            b1.Property<int>("ItemPedidoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ItemPedidoId");

                            b1.ToTable("ItemPedido");

                            b1.WithOwner()
                                .HasForeignKey("ItemPedidoId");
                        });

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "PrecoTotal", b1 =>
                        {
                            b1.Property<int>("ItemPedidoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ItemPedidoId");

                            b1.ToTable("ItemPedido");

                            b1.WithOwner()
                                .HasForeignKey("ItemPedidoId");
                        });

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "PrecoUnitario", b1 =>
                        {
                            b1.Property<int>("ItemPedidoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ItemPedidoId");

                            b1.ToTable("ItemPedido");

                            b1.WithOwner()
                                .HasForeignKey("ItemPedidoId");
                        });

                    b.Navigation("Desconto")
                        .IsRequired();

                    b.Navigation("PrecoTotal")
                        .IsRequired();

                    b.Navigation("PrecoUnitario")
                        .IsRequired();
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Pedido", b =>
                {

                    b.HasOne("PedidosLjWeb.Domain.Pedidos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PedidosLjWeb.Domain.Pedidos.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "Desconto", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "ValorLiquido", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "ValorTotal", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Desconto")
                        .IsRequired();

                    b.Navigation("Loja");

                    b.Navigation("ValorLiquido")
                        .IsRequired();

                    b.Navigation("ValorTotal")
                        .IsRequired();
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Produto", b =>
                {
                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "PrecoCusto", b1 =>
                        {
                            b1.Property<int>("ProdutoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("PedidosLjWeb.Domain.ValueObject.Monetario", "PrecoVenda", b1 =>
                        {
                            b1.Property<int>("ProdutoId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("PrecoCusto")
                        .IsRequired();

                    b.Navigation("PrecoVenda")
                        .IsRequired();
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Loja", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PedidosLjWeb.Domain.Pedidos.Produto", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
